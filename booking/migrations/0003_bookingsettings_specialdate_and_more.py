# Generated by Django 5.2 on 2025-04-19 18:36

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('booking', '0002_table_alter_booking_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BookingSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_booking_notice_hours', models.PositiveIntegerField(default=1, help_text='Minimum hours in advance for a booking')),
                ('max_booking_days_ahead', models.PositiveIntegerField(default=30, help_text='Maximum days in advance for a booking')),
                ('default_booking_duration_mins', models.PositiveIntegerField(default=120, help_text='Default reservation duration in minutes')),
                ('auto_confirm_bookings', models.BooleanField(default=False, help_text='Automatically confirm bookings')),
                ('send_confirmation_emails', models.BooleanField(default=True)),
                ('send_reminder_emails', models.BooleanField(default=True)),
                ('reminder_hours_before', models.PositiveIntegerField(default=24, help_text='Hours before reservation to send reminder')),
                ('max_party_size', models.PositiveIntegerField(default=20, help_text='Maximum number of guests per booking')),
                ('min_party_size', models.PositiveIntegerField(default=1, help_text='Minimum number of guests per booking')),
                ('allow_online_cancellation', models.BooleanField(default=True)),
                ('cancellation_deadline_hours', models.PositiveIntegerField(default=24, help_text='Hours before reservation when cancellation is no longer allowed')),
                ('require_deposit', models.BooleanField(default=False, help_text='Require a deposit for reservations')),
                ('deposit_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('deposit_percentage', models.DecimalField(decimal_places=2, default=0.0, help_text='Percentage of estimated bill', max_digits=5)),
            ],
            options={
                'verbose_name': 'Booking Settings',
                'verbose_name_plural': 'Booking Settings',
            },
        ),
        migrations.CreateModel(
            name='SpecialDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('is_closed', models.BooleanField(default=False, help_text='Restaurant is closed on this date')),
                ('has_special_hours', models.BooleanField(default=False)),
                ('opening_time', models.TimeField(blank=True, null=True)),
                ('closing_time', models.TimeField(blank=True, null=True)),
                ('max_bookings', models.PositiveIntegerField(blank=True, help_text='Maximum number of bookings allowed on this date', null=True)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.RemoveField(
            model_name='booking',
            name='num_people',
        ),
        migrations.AddField(
            model_name='booking',
            name='actual_guest_count',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='booking',
            name='assigned_server',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_bookings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='booking',
            name='cancellation_by',
            field=models.CharField(blank=True, help_text='Who cancelled the booking (customer, staff, system)', max_length=50),
        ),
        migrations.AddField(
            model_name='booking',
            name='completed_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='booking',
            name='confirmed_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='booking',
            name='deposit_amount',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
        ),
        migrations.AddField(
            model_name='booking',
            name='deposit_paid_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='booking',
            name='deposit_status',
            field=models.CharField(choices=[('not_required', 'Not Required'), ('pending', 'Pending'), ('paid', 'Paid'), ('refunded', 'Refunded'), ('forfeited', 'Forfeited')], default='not_required', max_length=20),
        ),
        migrations.AddField(
            model_name='booking',
            name='deposit_transaction_id',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='booking',
            name='dietary_requirements',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='booking',
            name='duration_minutes',
            field=models.PositiveIntegerField(default=120),
        ),
        migrations.AddField(
            model_name='booking',
            name='feedback_requested_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='booking',
            name='guest_count_adults',
            field=models.PositiveIntegerField(default=2, validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='booking',
            name='guest_count_children',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='booking',
            name='guest_count_infants',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='booking',
            name='is_vip',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='booking',
            name='no_show_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='booking',
            name='preferred_seating_area',
            field=models.CharField(choices=[('no_preference', 'No Preference'), ('indoor', 'Indoor'), ('outdoor', 'Outdoor'), ('bar', 'Bar'), ('private', 'Private Room'), ('window', 'Window'), ('quiet', 'Quiet Area')], default='no_preference', max_length=50),
        ),
        migrations.AddField(
            model_name='booking',
            name='reminder_sent_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='booking',
            name='seated_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='booking',
            name='table_assignment_notes',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='booking',
            name='vip_notes',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='booking',
            name='source',
            field=models.CharField(choices=[('website', 'Website'), ('phone', 'Phone'), ('walk_in', 'Walk-in'), ('third_party', 'Third Party App'), ('opentable', 'OpenTable'), ('resy', 'Resy'), ('yelp', 'Yelp'), ('google', 'Google')], default='website', max_length=20),
        ),
        migrations.AlterField(
            model_name='booking',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('seated', 'Seated'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='pending', max_length=20),
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('max_bookings', models.PositiveIntegerField(default=0, help_text='0 means unlimited')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['day_of_week', 'start_time'],
                'unique_together': {('day_of_week', 'start_time')},
            },
        ),
        migrations.AddField(
            model_name='booking',
            name='time_slot',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to='booking.timeslot'),
        ),
    ]
