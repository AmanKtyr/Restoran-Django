# Generated by Django 5.2 on 2025-04-19 19:17

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_contactmessage_read_at'),
    ]

    operations = [
        migrations.CreateModel(
            name='RestaurantSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_title', models.CharField(default='Restaurant Name', max_length=100)),
                ('site_description', models.TextField(blank=True, help_text='A brief description of your restaurant')),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('currency', models.CharField(default='USD', max_length=10)),
                ('currency_symbol', models.CharField(default='$', max_length=5)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Tax rate as a decimal (e.g., 0.08 for 8%)', max_digits=5)),
                ('restaurant_name', models.CharField(default='Restaurant Name', max_length=100)),
                ('restaurant_logo', models.ImageField(blank=True, null=True, upload_to='settings/')),
                ('restaurant_address', models.TextField(blank=True)),
                ('restaurant_phone', models.CharField(blank=True, max_length=20)),
                ('restaurant_email', models.EmailField(blank=True, max_length=254)),
                ('opening_hours', models.TextField(blank=True, help_text='Format: Day: HH:MM AM/PM - HH:MM AM/PM')),
                ('google_maps_embed', models.TextField(blank=True, help_text='Google Maps embed code')),
                ('primary_color', models.CharField(default='#FEA116', help_text='Hex color code', max_length=7)),
                ('secondary_color', models.CharField(default='#0F172B', help_text='Hex color code', max_length=7)),
                ('font_family', models.CharField(default='Nunito', max_length=50)),
                ('hero_image', models.ImageField(blank=True, null=True, upload_to='settings/')),
                ('favicon', models.ImageField(blank=True, null=True, upload_to='settings/')),
                ('smtp_host', models.CharField(blank=True, max_length=100)),
                ('smtp_port', models.PositiveIntegerField(default=587)),
                ('smtp_username', models.CharField(blank=True, max_length=100)),
                ('smtp_password', models.CharField(blank=True, max_length=100)),
                ('email_from_name', models.CharField(blank=True, max_length=100)),
                ('email_from_address', models.EmailField(blank=True, max_length=254)),
                ('enable_stripe', models.BooleanField(default=False)),
                ('stripe_public_key', models.CharField(blank=True, max_length=100)),
                ('stripe_secret_key', models.CharField(blank=True, max_length=100)),
                ('enable_paypal', models.BooleanField(default=False)),
                ('paypal_client_id', models.CharField(blank=True, max_length=100)),
                ('paypal_secret_key', models.CharField(blank=True, max_length=100)),
                ('facebook_url', models.URLField(blank=True)),
                ('twitter_url', models.URLField(blank=True)),
                ('instagram_url', models.URLField(blank=True)),
                ('linkedin_url', models.URLField(blank=True)),
                ('youtube_url', models.URLField(blank=True)),
                ('meta_keywords', models.TextField(blank=True, help_text='Comma-separated keywords for SEO')),
                ('meta_description', models.TextField(blank=True, help_text='Meta description for SEO')),
                ('google_analytics_id', models.CharField(blank=True, help_text='Google Analytics tracking ID', max_length=50)),
                ('enable_scheduled_backups', models.BooleanField(default=False)),
                ('backup_frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], default='daily', max_length=20)),
                ('backup_retention_days', models.PositiveIntegerField(default=30, help_text='Number of days to keep backups')),
                ('maintenance_mode', models.BooleanField(default=False, help_text='Put the site in maintenance mode')),
                ('maintenance_message', models.TextField(blank=True, default='We are currently performing maintenance. Please check back soon.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Restaurant Settings',
                'verbose_name_plural': 'Restaurant Settings',
            },
        ),
    ]
